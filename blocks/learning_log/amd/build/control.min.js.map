{"version":3,"file":"control.min.js","sources":["../src/control.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Provides the block_learning_log/control module\n *\n * @category   output\n * @copyright  2018 David Mudr√°k <david@moodle.com>\n * @author     2023 David Woloszyn <david.woloszyn@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module block_learning_log/control\n */\ndefine([\n        'jquery',\n        'core/log',\n        'core/ajax',\n        'core/templates',\n        'core/str',\n        'core/modal_factory',\n        'core/modal_events'\n    ],\n    function(\n        $,\n        Log,\n        Ajax,\n        Templates,\n        Str,\n        ModalFactory,\n        ModalEvents\n    ) {\n    'use strict';\n\n    let instanceid = null;\n\n    /**\n     * Initializes the block controls.\n     *\n     * @param {number} id The instance id\n     */\n    function init(id) {\n        Log.debug('block_learning_log/control: initializing controls of the block instance ' + id);\n\n        var region = $('[data-region=\"block_learning_log-instance-' + id + '\"]').first();\n\n        if (!region.length) {\n            Log.error('block_learning_log/control: wrapping region not found!');\n            return;\n        }\n\n        instanceid = id;\n        var control = new TodoControl(region);\n        control.main();\n    }\n\n    /**\n     * Controls a single block instance contents.\n     *\n     * @constructor\n     * @param {jQuery} region\n     */\n    function TodoControl(region) {\n        var self = this;\n        self.region = region;\n    }\n\n    /**\n     * Run the controller.\n     *\n     */\n    TodoControl.prototype.main = function() {\n        var self = this;\n\n        self.addForm = self.region.find('[data-control=\"addform\"]').first();\n        self.addTextInput = self.addForm.find('.block_learning_log_text');\n        self.addOrganisationInput = self.addForm.find('.block_learning_log_organisation');\n        self.addHoursnonverifiableInput = self.addForm.find('.block_learning_log_hoursnonverifiable');\n        self.addHoursverifiableInput = self.addForm.find('.block_learning_log_hoursverifiable');\n        self.addDueDateInput = self.addForm.find('.block_learning_log_duedate');\n        self.addSubmitButton = self.addForm.find('.block_learning_log_submit');\n        self.itemsList = self.region.find('.list-wrapper');\n        self.hideItemsButton = self.region.find('.block_learning_log_hide');\n        self.currentHideDone = self.region.find('[data-hidedone]');\n\n        self.initFeatures();\n    };\n\n    /**\n     * Initialize the controls for adding a new item.\n     *\n     * @method\n     */\n    TodoControl.prototype.initFeatures = function() {\n        var self = this;\n\n        // Reset all event listeners.\n        self.addForm.off();\n        self.addSubmitButton.off();\n        self.itemsList.off();\n        self.hideItemsButton.off();\n\n        // Submit form.\n        self.addForm.on('submit', function(e) {\n            e.preventDefault();\n            self.addNewTodo();\n        });\n        // Submit form button.\n        self.addSubmitButton.on('click', function() {\n            self.addForm.submit();\n        });\n        // Toggle item completion.\n        self.itemsList.on('click', '[data-control=\"toggle\"]', function(e) {\n            var id = $(e.currentTarget).parent().parent().attr('data-item');\n            self.toggleItem(id);\n        });\n        // Delete item.\n        self.itemsList.on('click', '[data-control=\"delete\"]', function(e) {\n            var id = $(e.currentTarget).parent().attr('data-id');\n            var text = $(e.currentTarget).parent().attr('data-text');\n            self.deleteItem(e, id, text);\n        });\n        // Edit item.\n        self.itemsList.on('click', '[data-control=\"edit\"]', function(e) {\n            var id = $(e.currentTarget).parent().attr('data-id');\n            var text = $(e.currentTarget).parent().attr('data-text');\n            var organisation = $(e.currentTarget).parent().attr('data-organisation');\n            var hoursnonverifiable = $(e.currentTarget).parent().attr('data-hoursnonverifiable');\n            var hoursverifiable = $(e.currentTarget).parent().attr('data-hoursverifiable');\n            var duedate = $(e.currentTarget).parent().attr('data-duedate');\n            self.editItem(e, id, text, organisation, hoursnonverifiable, hoursverifiable, duedate);\n        });\n        // Pin item.\n        self.itemsList.on('click', '[data-control=\"pin\"]', function(e) {\n            var id = $(e.currentTarget).parent().attr('data-id');\n            self.pinItem(id);\n        });\n        // Hide item.\n        self.hideItemsButton.on('click', function() {\n            var currentlyHidden = getHiddenState(self);\n            if (typeof currentlyHidden !== 'undefined') {\n                self.hideDoneItems(currentlyHidden);\n            }\n        });\n    };\n\n    const getHiddenState = (self) => {\n        return Boolean(parseInt(self.currentHideDone.attr('data-hidedone')));\n    };\n\n    /**\n     * Add a new todo item.\n     *\n     * @method\n     * @return {Deferred}\n     */\n    TodoControl.prototype.addNewTodo = function() {\n        var self = this;\n        var todoText = $.trim(self.addTextInput.val());\n        var organisation = $.trim(self.addOrganisationInput.val());\n        var hoursnonverifiable = self.addHoursnonverifiableInput.val();\n        var hoursverifiable = self.addHoursverifiableInput.val();\n        var duedate = null;\n\n        // If there is a due date, convert it.\n        if (self.addDueDateInput.val()) {\n            duedate = dateToTimestamp(self.addDueDateInput.val());\n        }\n\n        if (!todoText) {\n            return Str.get_string('placeholdermore', 'block_learning_log').then(function(text) {\n                self.addTextInput.prop('placeholder', text);\n                return $.Deferred().resolve();\n            });\n        }\n\n        if (!organisation) {\n            return Str.get_string('placeholdermore', 'block_learning_log').then(function(organisation) {\n                self.addOrganisationInput.prop('placeholder_organisation', organisation);\n                return $.Deferred().resolve();\n            });\n        }\n\n        if (!hoursnonverifiable) {\n            return Str.get_string('placeholdermore', 'block_learning_log').then(function(hoursnonverifiable) {\n                self.addHoursnonverifiableInput.prop('placeholder_hoursnonverifiable', hoursnonverifiable);\n                return $.Deferred().resolve();\n            });\n        }\n\n        if (!hoursverifiable) {\n            return Str.get_string('placeholdermore', 'block_learning_log').then(function(hoursverifiable) {\n                self.addHoursverifiableInput.prop('placeholder_hoursverifiable', hoursverifiable);\n                return $.Deferred().resolve();\n            });\n        }\n\n        return Ajax.call([{\n            methodname: 'block_learning_log_add_item',\n            args: {\n                instanceid: instanceid,\n                todotext: todoText,\n                organisation: organisation,\n                hoursnonverifiable: hoursnonverifiable,\n                hoursverifiable: hoursverifiable,\n                duedate: duedate,\n            }\n\n        }])[0].fail(function(reason) {\n            Log.error('block_learning_log/control: Unable to add the item');\n            Log.error(JSON.stringify(reason));\n            self.addSubmitButton.addClass('btn-danger');\n            self.addSubmitButton.html('<i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>');\n            return $.Deferred().reject();\n\n        }).then(function(response) {\n            self.itemsList.replaceWith(response);\n            init(instanceid);\n            return $.Deferred().resolve();\n        });\n    };\n\n    /**\n     * Toggle the done status of the given item.\n     *\n     * @method\n     * @param {number} id The item id\n     * @return {Deferred}\n     */\n    TodoControl.prototype.toggleItem = function(id) {\n        var self = this;\n\n        if (!id) {\n            Log.error('block_learning_log/control: no id provided');\n            return $.Deferred().resolve();\n        }\n\n        return Ajax.call([{\n            methodname: 'block_learning_log_toggle_item',\n            args: {\n                instanceid: instanceid,\n                id: id,\n                hide: getHiddenState(self)\n            }\n\n        }])[0].fail(function(reason) {\n            Log.error('block_learning_log/control: unable to toggle the item');\n            Log.error(JSON.stringify(reason));\n            return $.Deferred().reject();\n\n        }).then(function(response) {\n            self.itemsList.replaceWith(response);\n            init(instanceid);\n            return $.Deferred().resolve();\n        });\n    };\n\n    /**\n     * Edit the given item.\n     *\n     * @method\n     * @param {Event} e The event\n     * @param {number} id The event\n     * @param {string} text The event\n     * @param {string} organisation Organiser of the event\n     * @param {number} hoursnonverifiable Hoursnonverifiable of the event in hours\n     * @param {number} hoursverifiable Flag hours as verifiable\n     * @param {number} duedate The event\n     * @return {Deferred}\n     */\n    TodoControl.prototype.editItem = function(e, id, text, organisation, hoursnonverifiable, hoursverifiable, duedate) {\n        var self = this;\n        var trigger = $(e.currentTarget);\n\n        if (!id) {\n            Log.error('block_learning_log/control: no id provided');\n            return $.Deferred().resolve();\n        }\n\n        const args = {\n            id: id,\n            text: text,\n            organisation: organisation,\n            hoursnonverifiable: hoursnonverifiable,\n            hoursverifiable: hoursverifiable,\n            duedate: null\n        };\n\n        if (duedate) {\n            args.duedate = timestampToDate(duedate);\n        }\n\n        // Create modal.\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: 'Edit item',\n            body: Templates.render('block_learning_log/edit', args),\n        }, trigger)\n        .done(function(modal) {\n\n            modal.getRoot().on(ModalEvents.save, function() {\n\n                var modalBody = modal.getBody();\n                var newText = $.trim(modalBody.find('.block_learning_log_edit_text').val());\n                var newOrganisation = $.trim(modalBody.find('.block_learning_log_edit_organisation').val());\n                var newHoursnonverifiable = modalBody.find('.block_learning_log_edit_hoursnonverifiable').val();\n                var newHoursverifiable = modalBody.find('.block_learning_log_edit_hoursverifiable').val();\n                var newDuedate = dateToTimestamp(modalBody.find('.block_learning_log_edit_duedate').val());\n\n                return Ajax.call([{\n                    methodname: 'block_learning_log_edit_item',\n                    args: {\n                        instanceid: instanceid,\n                        id: id,\n                        todotext: newText,\n                        organisation: newOrganisation,\n                        hoursnonverifiable: newHoursnonverifiable,\n                        hoursverifiable: newHoursverifiable,\n                        duedate: newDuedate,\n                    }\n\n                }])[0].fail(function(reason) {\n                    window.console.log(reason);\n                    Log.error('block_learning_log/control: unable to edit the item');\n                    Log.error(JSON.stringify(reason));\n                    return $.Deferred().reject();\n\n                }).then(function(response) {\n                    self.itemsList.replaceWith(response);\n                    init(instanceid);\n                    return $.Deferred().resolve();\n                });\n            });\n\n            // Handle hidden event.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                // Destroy when hidden.\n                modal.destroy();\n            });\n\n            // Show the modal.\n            modal.show();\n        });\n        return $.Deferred().resolve();\n    };\n\n    /**\n     * Delete the given item.\n     *\n     * @method\n     * @param {Event} e The event\n     * @param {number} id The item id\n     * @param {string} text The event\n     * @return {Deferred}\n     */\n    TodoControl.prototype.deleteItem = function(e, id, text) {\n        var self = this;\n        var trigger = $(e.currentTarget);\n\n        if (!id) {\n            Log.error('block_learning_log/control: no id provided');\n            return $.Deferred().resolve();\n        }\n\n        // Create modal.\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: 'Delete item',\n            body: 'Are you sure you want to delete <strong>' + text + '</strong>?',\n        }, trigger)\n        .done(function(modal) {\n\n            modal.setSaveButtonText('Confirm');\n            modal.getRoot().on(ModalEvents.save, function() {\n\n                return Ajax.call([{\n                    methodname: 'block_learning_log_delete_item',\n                    args: {\n                        instanceid: instanceid,\n                        id: id\n                    }\n\n                }])[0].fail(function(reason) {\n                    Log.error('block_learning_log/control: unable to delete the item');\n                    Log.error(JSON.stringify(reason));\n                    return $.Deferred().reject();\n\n                }).then(function(response) {\n                    self.itemsList.replaceWith(response);\n                    init(instanceid);\n                    return $.Deferred().resolve();\n                });\n            });\n\n            // Handle hidden event.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                // Destroy when hidden.\n                modal.destroy();\n            });\n\n            // Show the modal.\n            modal.show();\n        });\n        return $.Deferred().resolve();\n    };\n\n    /**\n     * Toggle the pin status of the given item.\n     *\n     * @method\n     * @param {number} id The item id\n     * @return {Deferred}\n     */\n    TodoControl.prototype.pinItem = function(id) {\n        var self = this;\n\n        if (!id) {\n            Log.error('block_learning_log/control: no id provided');\n            return $.Deferred().resolve();\n        }\n\n        return Ajax.call([{\n            methodname: 'block_learning_log_pin_item',\n            args: {\n                instanceid: instanceid,\n                id: id\n            }\n\n        }])[0].fail(function(reason) {\n            Log.error('block_learning_log/control: unable to pin the item');\n            Log.error(JSON.stringify(reason));\n            return $.Deferred().reject();\n\n        }).then(function(response) {\n            self.itemsList.replaceWith(response);\n            init(instanceid);\n            return $.Deferred().resolve();\n        });\n    };\n\n    /**\n     * Toggle the hide status of the given items\n     *\n     * @method\n     * @param {boolean} hide To current hidden state (true means hidden).\n     * @return {Deferred}\n     */\n    TodoControl.prototype.hideDoneItems = function(hide) {\n        var self = this;\n\n        // Invert the boolean to toggle the current hidden status.\n        hide = !hide;\n\n        return Ajax.call([{\n            methodname: 'block_learning_log_hide_done_items',\n            args: {\n                instanceid: instanceid,\n                hide: hide\n            }\n\n        }])[0].fail(function(reason) {\n            Log.error('block_learning_log/control: unable to hide/show the items');\n            Log.error(JSON.stringify(reason));\n            return $.Deferred().reject();\n\n        }).then(function(response) {\n            self.itemsList.replaceWith(response);\n            init(instanceid);\n            // Toggle the show/hide icon.\n            if (hide) {\n                self.hideItemsButton.children().removeClass('fa-eye');\n                self.hideItemsButton.children().removeClass('fa-eye-slash');\n                self.hideItemsButton.children().addClass('fa-eye');\n            } else {\n                self.hideItemsButton.children().removeClass('fa-eye');\n                self.hideItemsButton.children().removeClass('fa-eye-slash');\n                self.hideItemsButton.children().addClass('fa-eye-slash');\n            }\n            return $.Deferred().resolve();\n        });\n    };\n\n    /**\n     * Take a date string and convert to timestamp\n     *\n     * @param {string} date date string\n     * @return {number} 10 digit timestamp\n     */\n    function dateToTimestamp(date) {\n        return Date.parse(date) / 1000;\n    }\n\n    /**\n     * Take a 10 digit timestamp and convert to date string\n     *\n     * @param {number} timestamp 10 digit timestamp\n     * @return {string} YYYY-MM-DD\n     */\n    function timestampToDate(timestamp) {\n        const date = new Date(timestamp * 1000);\n        const datevalues = [\n            date.getFullYear(),\n            (\"0\" + (date.getMonth() + 1)).slice(-2),\n            (\"0\" + date.getDate()).slice(-2),\n        ];\n        return datevalues.join('-');\n    }\n\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","Log","Ajax","Templates","Str","ModalFactory","ModalEvents","instanceid","init","id","debug","region","first","length","TodoControl","main","error","this","prototype","addForm","find","addTextInput","addOrganisationInput","addHoursnonverifiableInput","addHoursverifiableInput","addDueDateInput","addSubmitButton","itemsList","hideItemsButton","currentHideDone","initFeatures","self","off","on","e","preventDefault","addNewTodo","submit","currentTarget","parent","attr","toggleItem","text","deleteItem","organisation","hoursnonverifiable","hoursverifiable","duedate","editItem","pinItem","currentlyHidden","getHiddenState","hideDoneItems","Boolean","parseInt","dateToTimestamp","date","Date","parse","todoText","trim","val","call","methodname","args","todotext","fail","reason","JSON","stringify","addClass","html","Deferred","reject","then","response","replaceWith","resolve","get_string","prop","hide","trigger","timestamp","getFullYear","getMonth","slice","getDate","join","timestampToDate","create","type","types","SAVE_CANCEL","title","body","render","done","modal","getRoot","save","modalBody","getBody","newText","newOrganisation","newHoursnonverifiable","newHoursverifiable","newDuedate","window","console","log","hidden","destroy","show","setSaveButtonText","children","removeClass"],"mappings":";;;;;;;;AA2BAA,oCAAO,CACC,SACA,WACA,YACA,iBACA,WACA,qBACA,sBAEJ,SACIC,EACAC,IACAC,KACAC,UACAC,IACAC,aACAC,iBAIAC,WAAa,cAORC,KAAKC,IACVR,IAAIS,MAAM,2EAA6ED,QAEnFE,OAASX,EAAE,6CAA+CS,GAAK,MAAMG,QAEpED,OAAOE,QAKZN,WAAaE,GACC,IAAIK,YAAYH,QACtBI,QANJd,IAAIe,MAAM,mEAeTF,YAAYH,QACNM,KACNN,OAASA,OAOlBG,YAAYI,UAAUH,KAAO,WACdE,KAENE,QAFMF,KAESN,OAAOS,KAAK,4BAA4BR,QAFjDK,KAGNI,aAHMJ,KAGcE,QAAQC,KAAK,4BAH3BH,KAINK,qBAJML,KAIsBE,QAAQC,KAAK,oCAJnCH,KAKNM,2BALMN,KAK4BE,QAAQC,KAAK,0CALzCH,KAMNO,wBANMP,KAMyBE,QAAQC,KAAK,uCANtCH,KAONQ,gBAPMR,KAOiBE,QAAQC,KAAK,+BAP9BH,KAQNS,gBARMT,KAQiBE,QAAQC,KAAK,8BAR9BH,KASNU,UATMV,KASWN,OAAOS,KAAK,iBATvBH,KAUNW,gBAVMX,KAUiBN,OAAOS,KAAK,4BAV7BH,KAWNY,gBAXMZ,KAWiBN,OAAOS,KAAK,mBAX7BH,KAaNa,gBAQThB,YAAYI,UAAUY,aAAe,eAC7BC,KAAOd,KAGXc,KAAKZ,QAAQa,MACbD,KAAKL,gBAAgBM,MACrBD,KAAKJ,UAAUK,MACfD,KAAKH,gBAAgBI,MAGrBD,KAAKZ,QAAQc,GAAG,UAAU,SAASC,GAC/BA,EAAEC,iBACFJ,KAAKK,gBAGTL,KAAKL,gBAAgBO,GAAG,SAAS,WAC7BF,KAAKZ,QAAQkB,YAGjBN,KAAKJ,UAAUM,GAAG,QAAS,2BAA2B,SAASC,OACvDzB,GAAKT,EAAEkC,EAAEI,eAAeC,SAASA,SAASC,KAAK,aACnDT,KAAKU,WAAWhC,OAGpBsB,KAAKJ,UAAUM,GAAG,QAAS,2BAA2B,SAASC,OACvDzB,GAAKT,EAAEkC,EAAEI,eAAeC,SAASC,KAAK,WACtCE,KAAO1C,EAAEkC,EAAEI,eAAeC,SAASC,KAAK,aAC5CT,KAAKY,WAAWT,EAAGzB,GAAIiC,SAG3BX,KAAKJ,UAAUM,GAAG,QAAS,yBAAyB,SAASC,OACrDzB,GAAKT,EAAEkC,EAAEI,eAAeC,SAASC,KAAK,WACtCE,KAAO1C,EAAEkC,EAAEI,eAAeC,SAASC,KAAK,aACxCI,aAAe5C,EAAEkC,EAAEI,eAAeC,SAASC,KAAK,qBAChDK,mBAAqB7C,EAAEkC,EAAEI,eAAeC,SAASC,KAAK,2BACtDM,gBAAkB9C,EAAEkC,EAAEI,eAAeC,SAASC,KAAK,wBACnDO,QAAU/C,EAAEkC,EAAEI,eAAeC,SAASC,KAAK,gBAC/CT,KAAKiB,SAASd,EAAGzB,GAAIiC,KAAME,aAAcC,mBAAoBC,gBAAiBC,YAGlFhB,KAAKJ,UAAUM,GAAG,QAAS,wBAAwB,SAASC,OACpDzB,GAAKT,EAAEkC,EAAEI,eAAeC,SAASC,KAAK,WAC1CT,KAAKkB,QAAQxC,OAGjBsB,KAAKH,gBAAgBK,GAAG,SAAS,eACzBiB,gBAAkBC,eAAepB,WACN,IAApBmB,iBACPnB,KAAKqB,cAAcF,2BAKzBC,eAAkBpB,MACbsB,QAAQC,SAASvB,KAAKF,gBAAgBW,KAAK,4BAqV7Ce,gBAAgBC,aACdC,KAAKC,MAAMF,MAAQ,WA7U9B1C,YAAYI,UAAUkB,WAAa,eAC3BL,KAAOd,KACP0C,SAAW3D,EAAE4D,KAAK7B,KAAKV,aAAawC,OACpCjB,aAAe5C,EAAE4D,KAAK7B,KAAKT,qBAAqBuC,OAChDhB,mBAAqBd,KAAKR,2BAA2BsC,MACrDf,gBAAkBf,KAAKP,wBAAwBqC,MAC/Cd,QAAU,YAGVhB,KAAKN,gBAAgBoC,QACrBd,QAAUQ,gBAAgBxB,KAAKN,gBAAgBoC,QAG9CF,SAOAf,aAOAC,mBAOAC,gBAOE5C,KAAK4D,KAAK,CAAC,CACdC,WAAY,8BACZC,KAAM,CACFzD,WAAYA,WACZ0D,SAAUN,SACVf,aAAcA,aACdC,mBAAoBA,mBACpBC,gBAAiBA,gBACjBC,QAASA,YAGb,GAAGmB,MAAK,SAASC,eACjBlE,IAAIe,MAAM,sDACVf,IAAIe,MAAMoD,KAAKC,UAAUF,SACzBpC,KAAKL,gBAAgB4C,SAAS,cAC9BvC,KAAKL,gBAAgB6C,KAAK,+DACnBvE,EAAEwE,WAAWC,YAErBC,MAAK,SAASC,iBACb5C,KAAKJ,UAAUiD,YAAYD,UAC3BnE,KAAKD,YACEP,EAAEwE,WAAWK,aA3BbzE,IAAI0E,WAAW,kBAAmB,sBAAsBJ,MAAK,SAAS5B,wBACzEf,KAAKP,wBAAwBuD,KAAK,8BAA+BjC,iBAC1D9C,EAAEwE,WAAWK,aATjBzE,IAAI0E,WAAW,kBAAmB,sBAAsBJ,MAAK,SAAS7B,2BACzEd,KAAKR,2BAA2BwD,KAAK,iCAAkClC,oBAChE7C,EAAEwE,WAAWK,aATjBzE,IAAI0E,WAAW,kBAAmB,sBAAsBJ,MAAK,SAAS9B,qBACzEb,KAAKT,qBAAqByD,KAAK,2BAA4BnC,cACpD5C,EAAEwE,WAAWK,aATjBzE,IAAI0E,WAAW,kBAAmB,sBAAsBJ,MAAK,SAAShC,aACzEX,KAAKV,aAAa0D,KAAK,cAAerC,MAC/B1C,EAAEwE,WAAWK,cAyDhC/D,YAAYI,UAAUuB,WAAa,SAAShC,QACpCsB,KAAOd,YAENR,GAKEP,KAAK4D,KAAK,CAAC,CACdC,WAAY,iCACZC,KAAM,CACFzD,WAAYA,WACZE,GAAIA,GACJuE,KAAM7B,eAAepB,UAGzB,GAAGmC,MAAK,SAASC,eACjBlE,IAAIe,MAAM,yDACVf,IAAIe,MAAMoD,KAAKC,UAAUF,SAClBnE,EAAEwE,WAAWC,YAErBC,MAAK,SAASC,iBACb5C,KAAKJ,UAAUiD,YAAYD,UAC3BnE,KAAKD,YACEP,EAAEwE,WAAWK,cApBpB5E,IAAIe,MAAM,8CACHhB,EAAEwE,WAAWK,YAoC5B/D,YAAYI,UAAU8B,SAAW,SAASd,EAAGzB,GAAIiC,KAAME,aAAcC,mBAAoBC,gBAAiBC,aAClGhB,KAAOd,KACPgE,QAAUjF,EAAEkC,EAAEI,mBAEb7B,UACDR,IAAIe,MAAM,8CACHhB,EAAEwE,WAAWK,gBAGlBb,KAAO,CACTvD,GAAIA,GACJiC,KAAMA,KACNE,aAAcA,aACdC,mBAAoBA,mBACpBC,gBAAiBA,gBACjBC,QAAS,aAGTA,UACAiB,KAAKjB,iBAiNYmC,iBACf1B,KAAO,IAAIC,KAAiB,IAAZyB,iBACH,CACf1B,KAAK2B,eACJ,KAAO3B,KAAK4B,WAAa,IAAIC,OAAO,IACpC,IAAM7B,KAAK8B,WAAWD,OAAO,IAEhBE,KAAK,KAxNJC,CAAgBzC,UAInC1C,aAAaoF,OAAO,CAChBC,KAAMrF,aAAasF,MAAMC,YACzBC,MAAO,YACPC,KAAM3F,UAAU4F,OAAO,0BAA2B/B,OACnDiB,SACFe,MAAK,SAASC,OAEXA,MAAMC,UAAUjE,GAAG3B,YAAY6F,MAAM,eAE7BC,UAAYH,MAAMI,UAClBC,QAAUtG,EAAE4D,KAAKwC,UAAUhF,KAAK,iCAAiCyC,OACjE0C,gBAAkBvG,EAAE4D,KAAKwC,UAAUhF,KAAK,yCAAyCyC,OACjF2C,sBAAwBJ,UAAUhF,KAAK,+CAA+CyC,MACtF4C,mBAAqBL,UAAUhF,KAAK,4CAA4CyC,MAChF6C,WAAanD,gBAAgB6C,UAAUhF,KAAK,oCAAoCyC,cAE7E3D,KAAK4D,KAAK,CAAC,CACdC,WAAY,+BACZC,KAAM,CACFzD,WAAYA,WACZE,GAAIA,GACJwD,SAAUqC,QACV1D,aAAc2D,gBACd1D,mBAAoB2D,sBACpB1D,gBAAiB2D,mBACjB1D,QAAS2D,eAGb,GAAGxC,MAAK,SAASC,eACjBwC,OAAOC,QAAQC,IAAI1C,QACnBlE,IAAIe,MAAM,uDACVf,IAAIe,MAAMoD,KAAKC,UAAUF,SAClBnE,EAAEwE,WAAWC,YAErBC,MAAK,SAASC,iBACb5C,KAAKJ,UAAUiD,YAAYD,UAC3BnE,KAAKD,YACEP,EAAEwE,WAAWK,gBAK5BoB,MAAMC,UAAUjE,GAAG3B,YAAYwG,QAAQ,WAEnCb,MAAMc,aAIVd,MAAMe,UAEHhH,EAAEwE,WAAWK,WAYxB/D,YAAYI,UAAUyB,WAAa,SAAST,EAAGzB,GAAIiC,UAC3CX,KAAOd,KACPgE,QAAUjF,EAAEkC,EAAEI,sBAEb7B,IAMLJ,aAAaoF,OAAO,CAChBC,KAAMrF,aAAasF,MAAMC,YACzBC,MAAO,cACPC,KAAM,2CAA6CpD,KAAO,cAC3DuC,SACFe,MAAK,SAASC,OAEXA,MAAMgB,kBAAkB,WACxBhB,MAAMC,UAAUjE,GAAG3B,YAAY6F,MAAM,kBAE1BjG,KAAK4D,KAAK,CAAC,CACdC,WAAY,iCACZC,KAAM,CACFzD,WAAYA,WACZE,GAAIA,OAGR,GAAGyD,MAAK,SAASC,eACjBlE,IAAIe,MAAM,yDACVf,IAAIe,MAAMoD,KAAKC,UAAUF,SAClBnE,EAAEwE,WAAWC,YAErBC,MAAK,SAASC,iBACb5C,KAAKJ,UAAUiD,YAAYD,UAC3BnE,KAAKD,YACEP,EAAEwE,WAAWK,gBAK5BoB,MAAMC,UAAUjE,GAAG3B,YAAYwG,QAAQ,WAEnCb,MAAMc,aAIVd,MAAMe,UAEHhH,EAAEwE,WAAWK,YA3ChB5E,IAAIe,MAAM,8CACHhB,EAAEwE,WAAWK,YAoD5B/D,YAAYI,UAAU+B,QAAU,SAASxC,QACjCsB,KAAOd,YAENR,GAKEP,KAAK4D,KAAK,CAAC,CACdC,WAAY,8BACZC,KAAM,CACFzD,WAAYA,WACZE,GAAIA,OAGR,GAAGyD,MAAK,SAASC,eACjBlE,IAAIe,MAAM,sDACVf,IAAIe,MAAMoD,KAAKC,UAAUF,SAClBnE,EAAEwE,WAAWC,YAErBC,MAAK,SAASC,iBACb5C,KAAKJ,UAAUiD,YAAYD,UAC3BnE,KAAKD,YACEP,EAAEwE,WAAWK,cAnBpB5E,IAAIe,MAAM,8CACHhB,EAAEwE,WAAWK,YA6B5B/D,YAAYI,UAAUkC,cAAgB,SAAS4B,UACvCjD,KAAOd,YAGX+D,MAAQA,KAED9E,KAAK4D,KAAK,CAAC,CACdC,WAAY,qCACZC,KAAM,CACFzD,WAAYA,WACZyE,KAAMA,SAGV,GAAGd,MAAK,SAASC,eACjBlE,IAAIe,MAAM,6DACVf,IAAIe,MAAMoD,KAAKC,UAAUF,SAClBnE,EAAEwE,WAAWC,YAErBC,MAAK,SAASC,iBACb5C,KAAKJ,UAAUiD,YAAYD,UAC3BnE,KAAKD,YAEDyE,MACAjD,KAAKH,gBAAgBsF,WAAWC,YAAY,UAC5CpF,KAAKH,gBAAgBsF,WAAWC,YAAY,gBAC5CpF,KAAKH,gBAAgBsF,WAAW5C,SAAS,YAEzCvC,KAAKH,gBAAgBsF,WAAWC,YAAY,UAC5CpF,KAAKH,gBAAgBsF,WAAWC,YAAY,gBAC5CpF,KAAKH,gBAAgBsF,WAAW5C,SAAS,iBAEtCtE,EAAEwE,WAAWK,cA8BrB,CACHrE,KAAMA"}